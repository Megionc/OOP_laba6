<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QCqRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB2AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABpAHQAeQAgAD0A
        IAAxADAAMAAKAAAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMc
        HCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgArgDUAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A9/ooooAKKKKACiiigAooooAKKKKACiiigAooyKMigAooyKKACiiigAooooAK
        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
        UUUUAFFFFABRRRQAUUUUAFFFFAH/2Q==
</value>
  </data>
</root>