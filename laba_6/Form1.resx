<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QCqRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB2AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABpAHQAeQAgAD0A
        IAAxADAAMAAKAAAA/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMc
        HCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAhgCjAwEiAAIRAQMRAf/EAB8AAAEFAQEB
        AQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQci
        cRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV
        1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//E
        ALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDTh
        JfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKT
        lJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5
        +v/aAAwDAQACEQMRAD8A9/ooooAKKKKACiiigAoopCQoJJwB1JoAWiuG1X4weBtIuWtp9cjllU4YW0bz
        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
</value>
  </data>
</root>